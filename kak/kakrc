set-option -add global autoinfo normal
set-option global scrolloff 3,3
set-option global ui_options ncurses_wheel_down_button=64
set-option global ui_options ncurses_assistant=off
set-option global tabstop 4

# switch some keys
map global normal <backspace> <\>  # \ mapped to buffers mode
map global normal <space> <semicolon>
map global normal <semicolon> <space>

# highlight delimiter matches
add-highlighter global/match show-matching

# comment maps
map global normal '#'   ': comment-line<ret>'  -docstring "comment line"
map global normal <a-#> ': comment-block<ret>' -docstring "comment block"

# find non-ascii chars quickly
define-command non-ascii -docstring 'search for non-ascii characters' %{
    set-register / '[^\x00-\x7f]'
    execute-keys n
}

# enable lsp for filetypes
evaluate-commands %sh{kak-lsp --kakoune -s $kak_session}
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
    lsp-enable-window
    lsp-auto-hover-enable
    map window normal <F9> ': lsp-diagnostics<ret>'
}

# expand tabs
hook global InsertChar \t %{execute-keys -draft h@}

colorscheme mysticaltutor

# cursorline highlighting
hook global -group cursorline NormalKey .* %{
    remove-highlighter global/cursorline
    add-highlighter global/cursorline line %val{cursor_line} CursorLine
}
define-command cursorline-disable %{
    remove-highlighter global/cursorline
    remove-hooks global cursorline
}

# tmux window management commands
define-command -docstring "vsplit [<commands>]: split tmux vertically" \
vsplit -params .. -command-completion %{
    tmux-terminal-horizontal kak -c %val{session} -e "%arg{@}"
}
define-command -docstring "split [<commands>]: split tmux horizontally" \
split -params .. -command-completion %{
    tmux-terminal-vertical kak -c %val{session} -e "%arg{@}"
}
define-command -docstring "tabnew [<commands>]: create new tmux window" \
tabnew -params .. -command-completion %{
    tmux-terminal-window kak -c %val{session} -e "%arg{@}"
}

# buffers
map global normal <\>   ': enter-buffers-mode<ret>'            -docstring 'buffers…'
map global normal <a-\> ': enter-user-mode -lock buffers<ret>' -docstring 'buffers (lock)…'
alias global bd delete-buffer
alias global bf buffer-first
alias global bl buffer-last
alias global bo buffer-only
alias global bo! buffer-only-force
hook global WinDisplay .* info-buffers

# kak-tree mode
declare-user-mode tree
map global tree h ': tree-select-previous-node<ret>'  -docstring 'select previous'
map global tree l ': tree-select-next-node<ret>'      -docstring 'select next'
map global tree k ': tree-select-parent-node<ret>'    -docstring 'select parent'
map global tree j ': tree-select-children<ret>'       -docstring 'select children'
map global tree f ': tree-select-first-child<ret>'    -docstring 'select first child'
map global tree s ': tree-node-sexp<ret>'             -docstring 'show info'

map global user t ': enter-user-mode tree<ret>'       -docstring 'tree sitter…'
map global user T ': enter-user-mode -lock tree<ret>' -docstring 'tree sitter… (lock)'

# auto-pairs
map global user s ': auto-pairs-surround<ret>' -docstring 'surround'

# vertical-selection
map global normal ^     ': vertical-selection-down<ret>' -docstring "select matching pattern from the lines below"
map global normal <a-^> ': vertical-selection-up<ret>'   -docstring "select matching pattern from the lines above"
