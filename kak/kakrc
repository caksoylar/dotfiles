# set-option global autoinfo command|onkey|normal
set-option global scrolloff 5,10
set-option global ui_options terminal_assistant=none terminal_synchronized=yes
set-option global tabstop 4
set-option global modelinefmt '{{mode_info}} {magenta}%val{bufname}{default} {{context_info}} {green}%val{client}{default}@{cyan}%val{session}{default} %val{cursor_line}/%val{buf_line_count}:%val{cursor_char_column} (%val{selection_length}) '

# clean selections and search highlight on Esc
map global normal <esc> '<space><semicolon>: rmhl global/search<ret>'

# repurpose visual mode keys for object selection
map global normal v <a-i>
map global normal V <a-a>

# redundant mapping for <a-space> for Windows Terminal
map global normal <minus> <a-space>

# highlight search matches
hook global RegisterModified '/' %{ add-highlighter -override global/search regex "%reg{/}" 0:+i }

# comment maps
map global normal '#'   ': comment-line<ret>'  -docstring "comment line"
map global normal <a-#> ': comment-block<ret>' -docstring "comment block"

# find non-ascii chars quickly
define-command non-ascii -docstring "search for non-ascii characters" %{
    set-register slash '[^\x00-\x7f]'
}

# tmux window management commands
define-command -docstring "vsplit [<commands>]: split tmux vertically" \
vsplit -params .. -command-completion %{
    tmux-terminal-horizontal kak -c %val{session} -e "%arg{@}"
}
define-command -docstring "split [<commands>]: split tmux horizontally" \
split -params .. -command-completion %{
    tmux-terminal-vertical kak -c %val{session} -e "%arg{@}"
}
define-command -docstring "tabnew [<commands>]: create new tmux window" \
tabnew -params .. -command-completion %{
    tmux-terminal-window kak -c %val{session} -e "%arg{@}"
}

# repl maps
map global normal <c-t> ': tmux-repl-vertical<ret>'
map global normal <c-e> ': repl-send-text<ret>'

# lint settings
alias global lint-show-counters nop

hook global WinSetOption filetype=python %{
    set window lintcmd %{ run() {
        pylint -d C0111,C0301,C0103,E1101 --msg-template='{path}:{line}:{column}: {category}: {msg_id}: {msg} ({symbol})' "$1" | awk -F: 'BEGIN { OFS=":" } { if (NF == 6) { $3 += 1; print } }'
    } && run }
}
hook global WinSetOption filetype=(sh|kak|python) %{
    hook -group lint window User BufChange %{ try lint }
}
map global user l ': tool lint<ret>' -docstring "lint buffer"

# find-edit command
define-command find-edit -params 1 -menu -shell-script-candidates %{ fd --type file || rg --files || find . -type f -not -regex '.*/\..*' } 'edit %arg(1)'
map global user f ': find-edit ' -docstring "find and edit file"

# shortcuts
map global user g ':tool grep ' -docstring "grep"
map global user F ':tool find ' -docstring "find in buffers"

set-option global grepcmd 'rg --vimgrep'

map global user n     ': tool-next-match<ret>' -docstring "next message"
map global user <a-n> ': tool-previous-match<ret>' -docstring "previous message"

# add search flags
map global prompt <a-i> '<home>(?i)<end>' -docstring "case insensitive search"
map global prompt <a-o> '<home>(?S)<end>' -docstring "dot doesn't match newline search"

# select all occurrences of selection set
map global normal <a-percent> '*%s<ret>' -docstring "select all occurrences of selection"

## self plugin settings
# clipboard.kak: clipboard sync on explicit yank
hook global NormalKey y clipboard-sync

# percent.kak
map global goto p '<esc>: percent<ret>' -docstring "buffer percentage"

# inc-dec.kak
declare-user-mode inc-dec
map global inc-dec a ': inc-dec %val{count} + 0<ret>' -docstring "increment by count"
map global inc-dec x ': inc-dec %val{count} - 0<ret>' -docstring "decrement by count"
map global inc-dec A ': inc-dec %val{count} + 1<ret>' -docstring "increment by count times selection index"
map global inc-dec X ': inc-dec %val{count} - 1<ret>' -docstring "decrement by count times selection index"
map global normal = ': enter-user-mode inc-dec<ret>'       -docstring "enter inc-dec mode"
map global user   m ': enter-user-mode -lock inc-dec<ret>' -docstring "enter inc-dec mode (lock)"

hook global WinSetOption filetype=markdown %{
    map window normal <c-y> ': tmux-terminal-horizontal glow -pw $(tput cols) $kak_buffile<ret>'
}

## remote plugin settings
source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload

plug "caksoylar/kakoune-mysticaltutor" theme %{ colorscheme mysticaltutor }
plug "caksoylar/kakoune-snow" theme # %{ colorscheme snow-dark }
plug "caksoylar/kakoune-smooth-scroll" config %{
    hook global WinCreate (?!\*plug\*).* %{
        hook -once window WinDisplay .* %{
            smooth-scroll-enable
            smooth-scroll-map-key normal <a-percent> '*%s<ret>'
        }
    }
}
plug "occivink/kakoune-find"
plug "Delapouite/kakoune-registers"
plug "Screwtapello/kakoune-shellcheck" domain "gitlab.com"

# enable lsp for filetypes, kak-lsp not managed by plug
hook global WinSetOption filetype=(rust|python|c|cpp) %{
    try %{
        evaluate-commands %sh{ kak-lsp --kakoune -s "$kak_session" }
    }

    set-option window lsp_diagnostic_line_error_sign "!"
    set-option window lsp_diagnostic_line_warning_sign "?"
    set-face window DiagnosticError default+u
    set-face window DiagnosticWarning default+u
    set-option global lsp_server_configuration pyls.plugins.pyls_mypy.enabled=true

    lsp-enable-window
    lsp-auto-hover-enable
    lsp-diagnostic-lines-disable window

    map window user L ': enter-user-mode lsp<ret>' -docstring "LSP mode"
    map window user d ': tool lsp-diagnostics<ret>' -docstring "LSP diagnostics"
    map window goto r '<esc>: tool lsp-references<ret>' -docstring "references"
}

plug "kkga/ui.kak" config %{
    map global user o ": enter-user-mode ui<ret>" -docstring "toggle UI options"
    set-option global ui_line_numbers_flags -hlcursor -relative
    set-option global ui_whitespaces_flags -tab "»" -lf "↲" -nbsp "␣" -spc "·"
    set-option global ui_wrap_flags -marker "…"
    set-face global TrailingSpace default,red
    hook global WinCreate [^*].* %{
        ui-line-numbers-toggle
        ui-wrap-toggle
        ui-matching-toggle
        evaluate-commands %sh{
            if [ "$(git -C "$(dirname "$kak_buffile")" rev-parse --git-dir 2>/dev/null)" ]; then
                printf 'ui-git-diff-toggle\n'
            fi
        }
    }
}

plug "andreyorst/smarttab.kak" defer smarttab %{
    set-option global softtabstop 4
} config %{
    hook global WinSetOption filetype=(c|cpp|python|rust|markdown|kak|lisp|scheme|sh|fish|perl|yaml) expandtab
    hook global WinSetOption filetype=(makefile) noexpandtab
}

plug "Delapouite/kakoune-buffers" config %{
    map global buffers L ': buffer *lint-output*<ret>' -docstring "lint output"
    map global buffers D ': buffer *diagnostics*<ret>' -docstring "diagnostics"
    map global normal <backspace>   ': enter-buffers-mode<ret>'            -docstring "enter buffers mode"
    map global normal <a-backspace> ': enter-user-mode -lock buffers<ret>' -docstring "enter buffers mode (lock)"
    hook global WinDisplay .* info-buffers
}

plug "chambln/kakoune-readline" config %{
    hook global WinCreate .* readline-enable
}

plug 'delapouite/kakoune-mirror' %{
    map global normal "'" ': enter-user-mode mirror<ret>'
}

plug "occivink/kakoune-vertical-selection" config %{
    map global normal ^     ': vertical-selection-down<ret>' -docstring "select matching pattern from the lines below"
    map global normal <a-^> ': vertical-selection-up<ret>'   -docstring "select matching pattern from the lines above"
}

plug "occivink/kakoune-expand" config %{
    map global normal <plus> ": expand<ret>"
    set-option -add global expand_commands %{
        expand-impl %{ exec <a-i>p }
        # lower indent level
        expand-impl %{ exec '<a-;>k<a-a>i' }
        # expand back to pythonic "...:" lines
        expand-impl %{ exec '<a-i>i<a-:><a-;><a-?>^[^\n]+:<ret><a-;>' }
    }
}

plug "Screwtapello/kakoune-state-save" domain "gitlab.com" config %{
    hook global KakBegin .* %{
        state-save-reg-load colon
        state-save-reg-load pipe
        state-save-reg-load slash
    }
    hook global KakEnd .* %{
        state-save-reg-save colon
        state-save-reg-save pipe
        state-save-reg-save slash
    }
    # hook global FocusOut .* %{ state-save-reg-save dquote }
    # hook global FocusIn  .* %{ state-save-reg-load dquote }
}

plug "sawdust-and-diamonds/scrollbar.kak" config %{
    hook global WinCreate .* %{
        scrollbar-enable
        hook window User ScrollStep %{ update-scrollbar }
        hook window User ui-hl-changed %{ move-scrollbar-to-left }
    }
    set-face global Scrollbar rgb:30343c,default
    set-face global ScrollbarSel rgb:5c8ec7,rgb:30343c
    set-face global ScrollbarHL rgb:e07093,default
    set-option global scrollbar_char "█"
    set-option global scrollbar_sel_char "•"
    # set-option global selection_chars " •:∴⠶⠷⢷⢿⣿▒"
}

plug "caksoylar/kakoune-focus" config %{
    map global user <space> ': ui-wrap-toggle; focus-toggle<ret>' -docstring "toggle focus"
}
